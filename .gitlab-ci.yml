image: registry.gitlab.com/gitlab-org/gitlab-build-images:gitlab-operator-build-base

variables:
  # Configuration of K8s
  # Namespace within which to run tests
  TESTS_NAMESPACE: "n${CI_COMMIT_SHORT_SHA}"
  DOMAIN_OPENSHIFT_4_6: "apps.ocp-ci-4623.k8s-ft.win"
  DOMAIN_OPENSHIFT_4_7: "apps.ocp-ci-4717.k8s-ft.win"
  DOMAIN_GKE: "gitlab-operator.k8s-ft.win"
  # Namespace built into default manifest
  NAMESPACE: "gitlab-system"
  TAG: ${CI_COMMIT_SHORT_SHA}
  IMG: ${CI_REGISTRY_IMAGE}
  HOSTSUFFIX: "n${CI_COMMIT_SHORT_SHA}"
  TLSSECRETNAME: "gitlab-ci-tls"
  # docker configuration
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  # API endpoint: /projects/:id/packages/generic/:package_name/:package_version
  RELEASE_VERSION: "${CI_COMMIT_TAG}"
  K8S_MANIFEST_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/gitlab-operator/${CI_COMMIT_TAG}/gitlab-operator-kubernetes-${CI_COMMIT_TAG}.yaml"
  OCP_MANIFEST_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/gitlab-operator/${CI_COMMIT_TAG}/gitlab-operator-openshift-${CI_COMMIT_TAG}.yaml"
  # OCP_RESOURCES_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/gitlab-operator/${CI_COMMIT_TAG}/openshift-resources-${CI_COMMIT_TAG}.yaml"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/gitlab-operator/${CI_COMMIT_TAG}"
  SECRET_DETECTION_HISTORIC_SCAN: "true"

stages:
  - prepare
  - build
  - test
  - publish
  - release
  - cluster_tests_approval
  - review
  - qa
  - cleanup
  - certification
  - report

.if_push_to_redhat: &if_push_to_redhat
  if: '$PUSH_TO_REDHAT == "true" '
  #TODO at the moment publishing is broken due to changes in RH API
  # so we'll let things fail until it is fixed
  allow_failure: true

include:
  - template: Dependency-Scanning.gitlab-ci.yml
    rules:
      - if: '$CI_PROJECT_PATH == "gitlab-org/cloud-native/gitlab-operator"'
  - template: Security/Secret-Detection.gitlab-ci.yml
    rules:
      - if: '$CI_PROJECT_PATH == "gitlab-org/cloud-native/gitlab-operator"'
  - local: .gitlab-ci-templates.yml

default:
  interruptible: true

pull_charts:
  stage: prepare
  script: scripts/retrieve_gitlab_charts.sh
  artifacts:
    paths:
      - charts/
  rules:
    - !reference [.if_release_tag]
    - if: '$CI_COMMIT_BRANCH'

lint_code:
  extends: .cache
  stage: test
  needs: []
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:golangci-lint-alpine
  script: golangci-lint run --out-format code-climate | tee gl-code-quality-report.json | jq -r '.[] | "\(.location.path):\(.location.lines.begin) \(.description)"'
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths:
      - gl-code-quality-report.json
  rules:
    - !reference [.skip_if_release_tag]
    - if: '$CI_COMMIT_BRANCH'

.test_job:
  extends: .cache
  stage: test
  needs: ["pull_charts"]
  variables:
    HELM_CHARTS: "${CI_PROJECT_DIR}/charts"
    GITLAB_OPERATOR_ASSETS: "${CI_PROJECT_DIR}/hack/assets"
  before_script:
    - mkdir coverage
    - export CHART_VERSION=$(sed -n ${VERSION_INDEX}p CHART_VERSIONS)
  rules:
    - !reference [.skip_if_release_tag]
    - if: '$CI_COMMIT_BRANCH'

unit_tests:
  extends: .test_job
  script: /go/bin/ginkgo -skip 'controller' -cover -outputdir=coverage ./...
  parallel:
    matrix:
      - VERSION_INDEX: ["1", "2", "3"]

slow_unit_tests:
  extends: .test_job
  script: /go/bin/ginkgo -focus 'controller' -cover -outputdir=coverage ./...
  variables:
    GITLAB_OPERATOR_SHARED_SECRETS_JOB_TIMEOUT: "600"
  parallel:
    matrix:
      - VERSION_INDEX: ["1", "2", "3"]

.docker_build_job:
  extends: .cache
  stage: release
  needs: ["pull_charts"]
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    # Update module cache so it can be saved in CI cache (only the dependencies required to build)
    - docker run -v "${GOPATH}:/go" -v "${CI_PROJECT_DIR}:/code" -w /code golang:1.14 go list ./...
  interruptible: false

build_branch_image:
  extends: .docker_build_job
  script:
    - docker build -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}" -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}" .
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
  except:
    refs:
      - master
      - tags

build_tag_image:
  extends: .docker_build_job
  script:
    - docker build -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}" -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}" .
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
  rules:
    - !reference [.if_release_tag]
    # TODO: when dev is part of the official release process,
    # change this to:
    # - !reference [.if_release_tag_on_dev]

build_latest_image:
  extends: .docker_build_job
  script:
    - docker build -t "${CI_REGISTRY_IMAGE}:latest" -t "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}" .
    - docker push "${CI_REGISTRY_IMAGE}:latest"
    - docker push "${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}"
  rules:
    - !reference [.if_default_branch]

build_bundle_image:
  extends: .docker_build_job
  script:
    - docker build -t "${CI_REGISTRY_IMAGE}/bundle" -f Dockerfile.bundle .
    - docker push "${CI_REGISTRY_IMAGE}/bundle"
  only:
    refs:
      - master
    changes:
      - bundle/**/*

approve_cluster_tests:
  stage: cluster_tests_approval
  image: alpine:latest
  script: echo "Proceeding to tests in CI clusters..."
  rules:
    - !reference [.skip_if_release_tag]
    - !reference [.skip_if_default_branch]
    - if: '$CI_COMMIT_BRANCH'
      when: manual

review_4_6:
  extends: .review_template
  variables:
    DOMAIN: $DOMAIN_OPENSHIFT_4_6
    PLATFORM: openshift
  before_script:
    - export KUBECONFIG="$KUBECONFIG_OCP_4_6"
  environment:
    name: openshift_4_6/$CI_COMMIT_REF_NAME
    url: https://gitlab-$TESTS_NAMESPACE.$DOMAIN_OPENSHIFT_4_6
    on_stop: stop_review_openshift_4_6
    auto_stop_in: 4 days
  resource_group: "openshift_4_6/${CI_COMMIT_REF_NAME}"

review_4_7:
  extends: .review_template
  variables:
    DOMAIN: $DOMAIN_OPENSHIFT_4_7
    PLATFORM: openshift
  before_script:
    - export KUBECONFIG="$KUBECONFIG_OCP_4_7"
  environment:
    name: openshift_4_7/$CI_COMMIT_REF_NAME
    url: https://gitlab-$TESTS_NAMESPACE.$DOMAIN_OPENSHIFT_4_7
    on_stop: stop_review_openshift_4_7
    auto_stop_in: 4 days
  resource_group: "openshift_4_7/${CI_COMMIT_REF_NAME}"

review_gke:
  extends: .review_template
  variables:
    DOMAIN: $DOMAIN_GKE
    PLATFORM: kubernetes
  before_script:
    - export KUBECONFIG="$KUBECONFIG_GKE"
  environment:
    name: gke/$CI_COMMIT_REF_NAME
    url: https://gitlab-$TESTS_NAMESPACE.$DOMAIN_GKE
    on_stop: stop_review_gke
    auto_stop_in: 4 days
  resource_group: "gke/${CI_COMMIT_REF_NAME}"

qa_4_6:
  extends: .qa
  stage: qa
  variables:
    DOMAIN: apps.ocp-ci-4623.k8s-ft.win
    QA_ENVIRONMENT_URL: "https://gitlab-${HOSTSUFFIX}.${DOMAIN}"
  dependencies:
    - review_4_6
  rules:
    - !reference [.skip_if_release_tag]
    - if: '$CI_COMMIT_BRANCH'

qa_4_7:
  extends: .qa
  stage: qa
  variables:
    DOMAIN: apps.ocp-ci-4717.k8s-ft.win
    QA_ENVIRONMENT_URL: "https://gitlab-${HOSTSUFFIX}.${DOMAIN}"
  dependencies:
    - review_4_7
  rules:
    - !reference [.skip_if_release_tag]
    - if: '$CI_COMMIT_BRANCH'

qa_gke:
  extends: .qa
  stage: qa
  variables:
    DOMAIN: $DOMAIN_GKE
    QA_ENVIRONMENT_URL: "https://gitlab-${HOSTSUFFIX}.${DOMAIN}"
  dependencies:
    - review_gke
  rules:
    - !reference [.skip_if_release_tag]
    - if: '$CI_COMMIT_BRANCH'

stop_review_openshift_4_6:
  extends: .stop_review_template
  before_script:
    - export KUBECONFIG="$KUBECONFIG_OCP_4_6"
  environment:
    name: openshift_4_6/$CI_COMMIT_REF_NAME
    action: stop

stop_review_openshift_4_7:
  extends: .stop_review_template
  before_script:
    - export KUBECONFIG="$KUBECONFIG_OCP_4_7"
  environment:
    name: openshift_4_7/$CI_COMMIT_REF_NAME
    action: stop

stop_review_gke:
  extends: .stop_review_template
  before_script:
    - export KUBECONFIG="$KUBECONFIG_GKE"
  environment:
    name: gke/$CI_COMMIT_REF_NAME
    action: stop

certification_upload:
  stage: certification
  image: "registry.gitlab.com/gitlab-org/gitlab-omnibus-builder/ruby_docker:1.0.1"
  services:
    - docker:dind
  rules:
    - !reference [.if_release_tag]
    - <<: *if_push_to_redhat
  retry: 1
  before_script:
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
  script:
    - ruby scripts/push_to_redhat.rb "${CI_COMMIT_REF_NAME}"

build_manifest:
  stage: build
  script: 
    - export TAG=${CI_COMMIT_TAG:-${TAG}}
    - make build_operator
    - make build_openshift_resources
    - echo "---" > .build/separator
    - cat .build/operator.yaml .build/separator .build/openshift_resources.yaml > .build/operator-openshift.yaml
  artifacts:
    untracked: false
    expire_in: 30 days
    paths:
      - .build/operator.yaml
      - .build/operator-openshift.yaml
      - .build/openshift_resources.yaml

upload_manifest:
  stage: publish
  image: curlimages/curl:latest
  needs: 
    - build_manifest
  rules:
    - !reference [.if_release_tag]
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
        --upload-file .build/operator.yaml \
        ${K8S_MANIFEST_URL}?status=default
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
        --upload-file .build/operator-openshift.yaml \
        ${OCP_MANIFEST_URL}?status=default
#   - |
#     curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
#       --upload-file .build/openshift_resources.yaml \
#       ${OCP_RESOURCES_URL}?status=default

publish_release:
  # Caution, as of 2021-02-02 these assets links require a login, see:
  # https://gitlab.com/gitlab-org/gitlab/-/issues/299384
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - upload_manifest
  rules:
    - !reference [.if_release_tag]
  script: echo "Releasing $CI_COMMIT_TAG from ${MANIFEST_URL}"
  release:
      name: "Release $CI_COMMIT_TAG"
      tag_name: "$CI_COMMIT_TAG"
      description: "$CI_COMMIT_TAG"
      assets:
        links:
          - name: "gitlab-operator-kubernetes.yaml"
            url: "${K8S_MANIFEST_URL}"
          - name: "gitlab-operator-openshift.yaml"
            url: "${OCP_MANIFEST_URL}"
#         - name: "openshift-resources.yaml"
#           url: "${OCP_RESOURCES_URL}"

issue-bot:
  stage: report
  image: registry.gitlab.com/gitlab-org/distribution/issue-bot:latest
  script: /issue-bot
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: on_failure
