image: registry.gitlab.com/gitlab-org/gitlab-build-images:gitlab-operator-build-base

stages:
  - prepare
  - test
  - build

.cache:
  variables:
    GOPATH: "${CI_PROJECT_DIR}/.go"
  before_script:
    - mkdir -p .go
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .go/pkg/mod/

lint_code:
  stage: prepare
  script:
    - /go/bin/golint -set_exit_status $(go list ./... | grep -v /vendor/)
  extends: .cache

unit_tests:
  stage: test
  script:
    - mkdir coverage
    - /go/bin/ginkgo -cover -outputdir=coverage ./...
  extends: .cache

build_all:
  stage: build
  script:
    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo ./...
  extends: .cache

image-build-master:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

image-build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
  except:
    - master

bundle-image:
  variables:
    OPERATOR_BUNDLE_IMG: "${CI_REGISTRY_IMAGE}-bundle"
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t  "$OPERATOR_BUNDLE_IMG"  . -f bundle.Dockerfile
    - docker push "$OPERATOR_BUNDLE_IMG"
  only:
    - master