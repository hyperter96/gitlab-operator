
.if_release_tag: &if_release_tag
  if: '$CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+(-(rc|RC|beta)\d*)?$/'

.skip_if_release_tag: &skip_if_release_tag
  <<: *if_release_tag
  when: never

.cache:
  variables:
    GOPATH: "${CI_PROJECT_DIR}/.go"
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .go/pkg/mod/
    when: 'always'

.functional_tests:
  extends: .cache
  script:
  - CLEANUP="no" ./scripts/test.sh
  - echo "ROOT_PASSWORD=$(kubectl -n $TESTS_NAMESPACE get secret gitlab-gitlab-initial-root-password -ojsonpath='{.data.password}' | base64 --decode ; echo)" >> functional_tests.env
  - echo "GITLAB_VERSION=$(kubectl -n $TESTS_NAMESPACE exec -ti $(kubectl -n $TESTS_NAMESPACE get pods | grep task-runner | awk '{print $1}') cat /srv/gitlab/VERSION)" >> functional_tests.env
  artifacts:
    paths:
      #NOTE: this will affect following Jobs providing manifest crafted to be deployed into tests.
      #      where this may backfire is if we push "publish" to happen *after* tests.
      - .build/operator.yaml
    reports:
      dotenv: functional_tests.env

.qa:
  image: registry.gitlab.com/gitlab-org/gitlab-omnibus-builder/ruby_docker
  stage: qa
  services:
  - docker:dind
  variables:
    QA_ARTIFACTS_DIR: $CI_PROJECT_DIR
    EE_LICENSE: $GITLAB_QA_EE_LICENSE
    QA_OPTIONS: "--tag smoke"
    KNAPSACK_REPORT_PATH: "knapsack/master_report.json"
    KNAPSACK_TEST_FILE_PATTERN: "qa/specs/features/**/*_spec.rb"
    KNAPSACK_GENERATE_REPORT: "true"
  script:
    - echo $QA_ENVIRONMENT_URL $GITLAB_VERSION
    - gem install gitlab-qa
    - SIGNUP_DISABLED=true QA_DEBUG=true GITLAB_USERNAME=root GITLAB_PASSWORD=$ROOT_PASSWORD GITLAB_ADMIN_USERNAME=root GITLAB_ADMIN_PASSWORD=$ROOT_PASSWORD gitlab-qa Test::Instance::Any EE:$GITLAB_VERSION $QA_ENVIRONMENT_URL -- $QA_OPTIONS
  artifacts:
    when: on_failure
    expire_in: 7d
    paths:
    - ./gitlab-qa-run-*
  allow_failure: true
  parallel: 2

.functional_tests_cleanup:
  variables:
    DEBUG: "yes"
    CLEANUP: "only"
  script: ./scripts/test.sh
  rules:
    - <<: *skip_if_release_tag
    - if: '$CI_COMMIT_BRANCH'
      when: always
