{{- $imageCfg := dict "image" .Values.image "context" $ -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: {{ include "name" . }}-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations: {{- toYaml .Values.podAnnotations | nindent 8 }}
      labels:
        control-plane: controller-manager
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range $index, $entry := .Values.image.pullSecrets }}
      - name: {{ $entry.name }}
      {{- end }}
      {{- end }}
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        {{- if .Values.manager.debug.enabled }}
        - --zap-devel=true
        {{- end }}
        command:
        - /manager
        image: {{ include "gitlab.image.fullPath" $imageCfg }}
        {{- if .Values.image.pullPolicy }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        {{- end }}
        {{- if .Values.manager.containerSecurityContext }}
        securityContext: {{- toYaml .Values.manager.containerSecurityContext | nindent 12 }}
        {{- end }}
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 6060
          name: health-port
        env:
        {{- if not .Values.watchCluster }}
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- end }}
        {{- if .Values.extraEnv }}
        {{- toYaml .Values.extraEnv | nindent 8 }}
        {{- end }}
        - name: GITLAB_MANAGER_SERVICE_ACCOUNT
          value: {{ include "manager.serviceAccount.name" . }}
        - name: GITLAB_APP_ANYUID_SERVICE_ACCOUNT
          value: {{ include "app.serviceAccount.name" . }}-anyuid
        - name: GITLAB_APP_NONROOT_SERVICE_ACCOUNT
          value: {{ include "app.serviceAccount.name" . }}-nonroot
        - name: NGINX_SERVICE_ACCOUNT
          value: {{ include "nginx-ingress.serviceAccount.name" . }}
        - name: PROMETHEUS_SERVICE_ACCOUNT
          value: {{ include "prometheus.serviceAccount.server.name" . }}
        livenessProbe:
          httpGet:
            path: /liveness
            port: health-port
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readiness
            port: health-port
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.14.1
        name: kube-rbac-proxy
        resources: {{- toYaml .Values.manager.kubeRbacProxy.resources | nindent 10 }}
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      serviceAccountName: {{ include "manager.serviceAccount.name" . }}
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
